{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jaureguicrespo/Documents/development/bursen/components/template/atoms/CustomButton/index.js\",\n    _this = this;\n\nimport { Button } from \"react-bootstrap\";\n\nvar CustomButton = function CustomButton(_ref) {\n  var action = _ref.action,\n      children = _ref.children,\n      type = _ref.type,\n      disabled = _ref.disabled,\n      label = _ref.label;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button // className={classes[handleClasse(type)]}\n    , {\n      onClick: function onClick() {\n        return action && [action()];\n      },\n      disabled: disabled,\n      label: label,\n      type: type,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_c = CustomButton;\nexport default CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["/Users/jaureguicrespo/Documents/development/bursen/components/template/atoms/CustomButton/index.js"],"names":["Button","CustomButton","action","children","type","disabled","label"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAsB,iBAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgD;AAAA,MAA7CC,MAA6C,QAA7CA,MAA6C;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAEjE,sBACI;AAAA,2BACI,QAAC,MAAD,CACI;AADJ;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMJ,MAAM,IAAI,CAACA,MAAM,EAAP,CAAhB;AAAA,OAFb;AAGI,MAAA,QAAQ,EAAEG,QAHd;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,IAAI,EAAEF,IALV;AAAA,gBAOKD;AAPL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CAfD;;KAAMF,Y;AAiBN,eAAeA,YAAf","sourcesContent":["import { Button} from \"react-bootstrap\"\n\nconst CustomButton = ({ action, children, type, disabled, label }) =>{\n\n    return(\n        <>\n            <Button\n                // className={classes[handleClasse(type)]}\n                onClick={() => action && [action()]}\n                disabled={disabled}\n                label={label}\n                type={type}\n            >\n                {children}\n            </Button>\n        </>\n    )\n}\n\nexport default CustomButton;"]},"metadata":{},"sourceType":"module"}