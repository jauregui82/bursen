{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaureguicrespo/Documents/development/bursen/components/template/atoms/CustomButton/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport { Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./styles\";\n/**\n * @param {string} action - Action for button.\n * @param {string} children - Text button.\n * @param {('btnRed'|'btnWhite')} type - if btnRed button is color red, else btnWhite is color white  \n * @param {boolean} disabled - True o false disabled button\n */\n\nconst CustomButton = ({\n  action,\n  children,\n  type,\n  disabled\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => action && [action()],\n      disabled: disabled,\n      type: type,\n      className: \"jsx-516566882\" + \" \" + ((type !== null && type !== void 0 ? type : \"btnRed\") || \"\"),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"516566882\",\n      children: \"div.jsx-516566882{width:100%;}button.jsx-516566882{border:none;outline-color:none;outline:none;height:56px;width:260px;left:0px;top:0px;border-radius:4px;}button.jsx-516566882:active{border:solid 1px #FFFFFF;position:relative;top:1px;}.btnRed.jsx-516566882{background-color:#BD2626;color:#FFFFFF;}.btnRed.jsx-516566882:hover{background-color:#bb4e4e;color:#FFFFFF;}.btnWhite.jsx-516566882{background-color:#FFFFFF;color:#3A4056;}.btnWhite.jsx-516566882:hover{background-color:#f5f5f5;color:#3A4056;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXVyZWd1aWNyZXNwby9Eb2N1bWVudHMvZGV2ZWxvcG1lbnQvYnVyc2VuL2NvbXBvbmVudHMvdGVtcGxhdGUvYXRvbXMvQ3VzdG9tQnV0dG9uL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNCd0IsQUFHd0IsQUFHQyxBQVdhLEFBS0EsQUFJQSxBQUlBLEFBSUEsV0E5QjdCLENBR3VCLGFBV0YsQUFLSCxBQUlBLEFBSUEsQUFJQSxNQTNCRCxRQWdCakIsQUFJQSxBQUlBLEFBSUEsSUFqQlcsQ0FWSyxPQVdoQixLQVZnQixZQUNILFNBQ0QsUUFDVSxrQkFFdEIiLCJmaWxlIjoiL1VzZXJzL2phdXJlZ3VpY3Jlc3BvL0RvY3VtZW50cy9kZXZlbG9wbWVudC9idXJzZW4vY29tcG9uZW50cy90ZW1wbGF0ZS9hdG9tcy9DdXN0b21CdXR0b24vaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdXR0b259IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIlxuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9zdHlsZXNcIjtcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gYWN0aW9uIC0gQWN0aW9uIGZvciBidXR0b24uXG4gKiBAcGFyYW0ge3N0cmluZ30gY2hpbGRyZW4gLSBUZXh0IGJ1dHRvbi5cbiAqIEBwYXJhbSB7KCdidG5SZWQnfCdidG5XaGl0ZScpfSB0eXBlIC0gaWYgYnRuUmVkIGJ1dHRvbiBpcyBjb2xvciByZWQsIGVsc2UgYnRuV2hpdGUgaXMgY29sb3Igd2hpdGUgIFxuICogQHBhcmFtIHtib29sZWFufSBkaXNhYmxlZCAtIFRydWUgbyBmYWxzZSBkaXNhYmxlZCBidXR0b25cbiAqL1xuY29uc3QgQ3VzdG9tQnV0dG9uID0gKHsgYWN0aW9uLCBjaGlsZHJlbiwgdHlwZSwgZGlzYWJsZWQgfSkgPT57XG5cbiAgICByZXR1cm4oXG4gICAgICAgIDw+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXt0eXBlID8/IFwiYnRuUmVkXCJ9XG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gYWN0aW9uICYmIFthY3Rpb24oKV19XG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgICAgICAgIHR5cGU9e3R5cGV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGRpdiB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgICBidXR0b24ge1xuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgb3V0bGluZS1jb2xvcjogbm9uZTtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBoZWlnaHQ6IDU2cHg7XG4gICAgICAgICAgICB3aWR0aDogMjYwcHg7XG4gICAgICAgICAgICBsZWZ0OiAwcHg7XG4gICAgICAgICAgICB0b3A6IDBweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcblxuICAgICAgICB9XG4gICAgICAgIGJ1dHRvbjphY3RpdmUge1xuICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCAxcHggI0ZGRkZGRjtcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgdG9wOjFweDtcbiAgICAgICAgfVxuICAgICAgICAuYnRuUmVkIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNCRDI2MjY7XG4gICAgICAgICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgfVxuICAgICAgICAuYnRuUmVkOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNiYjRlNGU7XG4gICAgICAgICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgfVxuICAgICAgICAuYnRuV2hpdGUge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgICAgIGNvbG9yOiAjM0E0MDU2O1xuICAgICAgICB9XG4gICAgICAgIC5idG5XaGl0ZTpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICAgICAgICAgICAgY29sb3I6ICMzQTQwNTY7XG4gICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8Lz5cbiAgICApXG59XG5DdXN0b21CdXR0b24ucHJvcFR5cGVzID0ge1xuICAgIGFjdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIHR5cGU6IFByb3BUeXBlcy5vbmVPZihbXG4gICAgICAgIFwicHJpbWFyeVwiLFxuICAgICAgICBcImJ0bldoaXRlXCJcbiAgICAgIF0pXG4gIH07XG5cbmV4cG9ydCBkZWZhdWx0IEN1c3RvbUJ1dHRvbjsiXX0= */\\n/*@ sourceURL=/Users/jaureguicrespo/Documents/development/bursen/components/template/atoms/CustomButton/index.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true);\n};\n\nCustomButton.propTypes = {\n  action: PropTypes.func,\n  children: PropTypes.string,\n  disabled: PropTypes.bool,\n  type: PropTypes.oneOf([\"primary\", \"btnWhite\"])\n};\nexport default CustomButton;","map":{"version":3,"sources":["/Users/jaureguicrespo/Documents/development/bursen/components/template/atoms/CustomButton/index.js"],"names":["Button","PropTypes","styles","CustomButton","action","children","type","disabled","propTypes","func","string","bool","oneOf"],"mappings":";;;;AAAA,SAASA,MAAT,QAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAE1D,sBACI;AAAA,4BACI;AAEI,MAAA,OAAO,EAAE,MAAMH,MAAM,IAAI,CAACA,MAAM,EAAP,CAF7B;AAGI,MAAA,QAAQ,EAAEG,QAHd;AAII,MAAA,IAAI,EAAED,IAJV;AAAA,2CACeA,IADf,aACeA,IADf,cACeA,IADf,GACuB,QADvB;AAAA,gBAMKD;AANL;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAiDH,CAnDD;;AAoDAF,YAAY,CAACK,SAAb,GAAyB;AACrBJ,EAAAA,MAAM,EAAEH,SAAS,CAACQ,IADG;AAErBJ,EAAAA,QAAQ,EAAEJ,SAAS,CAACS,MAFC;AAGrBH,EAAAA,QAAQ,EAAEN,SAAS,CAACU,IAHC;AAIrBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,KAAV,CAAgB,CAClB,SADkB,EAElB,UAFkB,CAAhB;AAJe,CAAzB;AAUA,eAAeT,YAAf","sourcesContent":["import { Button} from \"react-bootstrap\"\nimport PropTypes from \"prop-types\";\nimport styles from \"./styles\";\n\n/**\n * @param {string} action - Action for button.\n * @param {string} children - Text button.\n * @param {('btnRed'|'btnWhite')} type - if btnRed button is color red, else btnWhite is color white  \n * @param {boolean} disabled - True o false disabled button\n */\nconst CustomButton = ({ action, children, type, disabled }) =>{\n\n    return(\n        <>\n            <button\n                className={type ?? \"btnRed\"}\n                onClick={() => action && [action()]}\n                disabled={disabled}\n                type={type}\n            >\n                {children}\n            </button>\n            <style jsx>{`\n        div {\n            width: 100%;\n        }\n        button {\n            border: none;\n            outline-color: none;\n            outline: none;\n            height: 56px;\n            width: 260px;\n            left: 0px;\n            top: 0px;\n            border-radius: 4px;\n\n        }\n        button:active {\n            border: solid 1px #FFFFFF;\n            position:relative;\n            top:1px;\n        }\n        .btnRed {\n            background-color: #BD2626;\n            color: #FFFFFF;\n        }\n        .btnRed:hover {\n            background-color: #bb4e4e;\n            color: #FFFFFF;\n        }\n        .btnWhite {\n            background-color: #FFFFFF;\n            color: #3A4056;\n        }\n        .btnWhite:hover {\n            background-color: #f5f5f5;\n            color: #3A4056;\n        }\n        `}</style>\n        </>\n    )\n}\nCustomButton.propTypes = {\n    action: PropTypes.func,\n    children: PropTypes.string,\n    disabled: PropTypes.bool,\n    type: PropTypes.oneOf([\n        \"primary\",\n        \"btnWhite\"\n      ])\n  };\n\nexport default CustomButton;"]},"metadata":{},"sourceType":"module"}